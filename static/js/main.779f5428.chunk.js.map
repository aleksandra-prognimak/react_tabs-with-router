{"version":3,"sources":["components/PageNavLink/PageNavLink.tsx","components/Navigation/Navigation.tsx","App.tsx","pages/HomePage/HomePage.tsx","pages/PageNotFound/PageNotFound.tsx","pages/TabsPage/TabsPage.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","Navigation","App","HomePage","PageNotFound","TabsPage","tabs","id","title","content","tabId","useParams","selectedTab","find","tab","map","ReactDOM","render","path","element","index","replace","document","getElementById"],"mappings":"gPASaA,EAAyB,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACpC,cAAC,IAAD,CACED,GAAIA,EACJE,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CAAE,YAAaD,KAJnB,SAOGF,KCfQI,EAAa,kBACxB,qBACEH,UAAU,2EAQV,UAAQ,MATV,SAWE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaF,GAAG,IAAIC,KAAK,SACzB,cAAC,EAAD,CAAaD,GAAG,QAAQC,KAAK,iBCXxBK,EAAM,WACjB,OACE,qCACE,cAAC,EAAD,IAEA,qBAAKJ,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,YCPGK,EAAW,kBACtB,oBAAIL,UAAU,QAAd,wBCPWM,EAAe,kBAC1B,oBAAIN,UAAU,QAAd,6BCGWO,EAAW,WACtB,IAAMC,EAAc,CAClB,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBAGlCC,EAAUC,cAAVD,MACFE,EAAcN,EAAKO,MAAK,SAAAC,GAAG,OAAIA,EAAIP,KAAOG,KAEhD,OACE,qCACE,oBAAIZ,UAAU,QAAd,uBAEA,qBAAKA,UAAU,gBAAf,SACE,6BAEIQ,EAAKS,KAAI,SAAAD,GAAG,OACV,oBACE,UAAQ,MAERhB,UACEE,IAAW,CAAE,YAAac,EAAIP,MAAJ,OAAWK,QAAX,IAAWA,OAAX,EAAWA,EAAaL,MAJtD,SAOE,cAAC,IAAD,CAAMX,GAAE,aAAQkB,EAAIP,IAApB,SACGO,EAAIN,SANFM,EAAIP,WAcnB,qBAAKT,UAAU,QAAQ,UAAQ,aAA/B,SAEIc,EACIA,EAAYH,QACZ,4BC9BdO,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,eAAC,IAAD,CAAOD,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,SAEhC,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUvB,GAAG,IAAIyB,SAAO,MACpD,cAAC,IAAD,CAAOH,KAAK,IAAIC,QAAS,cAAC,EAAD,aAI/BG,SAASC,eAAe,W","file":"static/js/main.779f5428.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'is-active': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import { PageNavLink } from '../PageNavLink';\n\nexport const Navigation = () => (\n  <nav\n    className=\"\n      navbar\n      is-light\n      is-fixed-top\n      is-mobile\n      has-shadow\n      has-navbar-fixed-top\n    \"\n    data-cy=\"Nav\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"/tabs\" text=\"Tabs\" />\n      </div>\n    </div>\n  </nav>\n);\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { Navigation } from './components/Navigation';\n\nexport const App = () => {\n  return (\n    <>\n      <Navigation />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </>\n  );\n};\n","// const tabs = [\n//   { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n//   { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n//   { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n// ];\n\nexport const HomePage = () => (\n  <h1 className=\"title\">Home page</h1>\n);\n","export const PageNotFound = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Tab } from '../../types/Tab';\n\nexport const TabsPage = () => {\n  const tabs: Tab[] = [\n    { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n    { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n    { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n  ];\n\n  const { tabId } = useParams();\n  const selectedTab = tabs.find(tab => tab.id === tabId);\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {\n            tabs.map(tab => (\n              <li\n                data-cy=\"Tab\"\n                key={tab.id}\n                className={\n                  classNames({ 'is-active': tab.id === selectedTab?.id })\n                }\n              >\n                <Link to={`../${tab.id}`}>\n                  {tab.title}\n                </Link>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {\n          selectedTab\n            ? selectedTab.content\n            : 'Please select a tab'\n        }\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport {\n  HashRouter as Router,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PageNotFound } from './pages/PageNotFound';\nimport { TabsPage } from './pages/TabsPage';\n\nReactDOM.render(\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route path=\"tabs\">\n          <Route index element={<TabsPage />} />\n          <Route path=\":tabId\" element={<TabsPage />} />\n        </Route>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"*\" element={<PageNotFound />} />\n      </Route>\n    </Routes>\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}